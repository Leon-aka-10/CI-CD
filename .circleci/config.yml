# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

commands:
  print_pipeline_id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
  
# Define a job to be invoked later in a workflow.
jobs:
  print_hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    steps:
      - checkout
      - run: echo hello
  print_world:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    steps:
      - checkout
      - run: echo world
  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $My_env_var
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo -e 'hello world' > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  my_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  #error_job:
    #docker:
      #- image: circleci/node:13.8.0
    #steps:
      #- run: exit 1
      #- run:
          #name: on error
          #command: echo -e 'Hello Error!'
          #when: on_fail
  

# Invoke jobs via workflows
workflows:
  welcome:
    jobs:
      - welcome/run
      - print_hello
      - print_world:
          requires:
            - print_hello
  test-env-vars:
    jobs:
      - build
  my_workflow:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
  cmd_workflow:
    jobs:
      - my_job
  #error_workflow:
    #jobs:
      #- error_job
